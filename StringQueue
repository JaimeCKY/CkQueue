public class StringQueue {
    private String[] queueArray;
    private int front; // Index of the front element
    private int rear; // Index of the rear element
    private int size;

    public StringQueue(int capacity) {
        queueArray = new String[capacity];
        front = 0;
        rear = -1;
        size = 0;
    }

    public void enqueue(String item) {
        if (size == queueArray.length) {
            System.out.println("Queue is full. Cannot enqueue " + item);
            return;
        }
        rear = (rear + 1) % queueArray.length;
        queueArray[rear] = item;
        size++;
    }

    public String dequeue() {
        if (isEmpty()) {
            System.out.println("Queue is empty. Cannot dequeue.");
            return null;
        }
        String temp = queueArray[front];
        front = (front + 1) % queueArray.length;
        size--;
        return temp;
    }

    public boolean isEmpty() {
        return size == 0;
    }

    public int size() {
        return size;
    }

    public static void main(String[] args) {
        StringQueue queue = new StringQueue(5);
        queue.enqueue("Alice");
        queue.enqueue("Bob");
        queue.enqueue("Charlie");

        System.out.println("Dequeued: " + queue.dequeue()); // Should print "Alice"
        System.out.println("Dequeued: " + queue.dequeue()); // Should print "Bob"
        queue.enqueue("David");
        System.out.println("Dequeued: " + queue.dequeue()); // Should print "Charlie"
        System.out.println("Dequeued: " + queue.dequeue()); // Should print "David"
    }
}
